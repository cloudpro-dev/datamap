body {
    background-color: #f5f5f5;
    margin: 0;
}

/* Fixed header */

.fixed-header, .fixed-footer{
    width: 100%;
    position: fixed;        
    background: #555;
    padding: 10px;
    color: #fff;
    z-index: 800;
}
.fixed-header{
    top: 0;
    left:0;
}
.fixed-footer{
    bottom: 0;
    left:0;
}

/* Toolbar */

.toolbar {
    position: relative;
    display: flex;
    flex-flow: row nowrap;
    justify-content: flex-start; /* left aligned */
    align-items: stretch; /* vertical middle */
}
.toolbar-label {
    margin-right: 5px;
}
.form-element {
    margin-right: 20px
}
.form-element.orderby {
    padding-top: 2px;
}

/* Panel */

.panel {
    border: 1px solid #777;
    width:300px;
    position:absolute;
    top:0;
    left:0;
    z-index: 10;
    background-color: white;
}
.panel-header {
    padding: 8px 10px;
    background-color: #eee;
    display: flex;
    align-items: center;
}
.panel-header span {
    flex-grow: 1;
}
.panel-header a {
    flex-grow: 1;
}
.panel-body {
    overflow-y: scroll;
    position:relative;
    border-top: 1px solid #777;
}

/* Tooltip */

.tooltip {
    display: none; 
    position: absolute; 
    padding: 10px;
    color: #777; 
    background-color: #fff; 
    border: 1px solid #ccc; 
    box-shadow: 0 1px 3px 1px rgba(0,0,0,0.3); 
    border-radius: 3px;
    z-index: 1000;
}

/* Field */

.field {
    border: 1px solid #ccc;
    border-width: 0 0 1px 0;
    padding: 5px;
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    cursor: default;
    color: #777;
}
.field div { 
    font-size: 1em;
}
.field div.field-label {
    flex-grow:1;
    margin-right: 10px;
    display: flex; 
    /*word-wrap: break-word;*/
}
.field div.field-label span {
    line-height: 24px;
    margin-right: 7px;
}
.field div.field-datatype {
    text-transform: uppercase;
    text-align: left;
    margin-right: 10px;
}
.field div.field-maxlength {
    text-align: right;
    width: 50px;
}
.field.selected {
    background-color: yellow;
    font-weight: bold;
}
.field.matched {
    background-color: greenyellow;
}

/* Icons */

.icon:before {
    content: "";
    display: block;
    width: 24px;
    height: 24px;
    float: left;
}

.label-icon:before {
    background: url("images/label.svg") no-repeat;
    margin: 0 5px 0 0;
    filter: invert(95%) sepia(0%) saturate(42%) hue-rotate(224deg) brightness(90%) contrast(83%);
    transform: rotate(180, 0);
}

.required-icon:before {
    background: url("images/link.svg") no-repeat;
    margin: 0 5px 0 0;
    filter: invert(95%) sepia(0%) saturate(42%) hue-rotate(224deg) brightness(90%) contrast(83%);
    float: none;
}

.faker-icon:before {
    background: url("images/transform.svg") no-repeat;
    filter: invert(73%) sepia(0%) saturate(1585%) hue-rotate(237deg) brightness(94%) contrast(90%);
}
.faker-icon:hover {
    filter: invert(13%) sepia(52%) saturate(6921%) hue-rotate(356deg) brightness(92%) contrast(119%);
}


/* SVG elements */

#svg-canvas {
    z-index: 0;
    position:absolute;
    top:50px;
    left:0px
}
.selected-line {
    stroke: #94d31b; 
}
.svg-connector {
    stroke: #94d31b; 
    fill: #94d31b;
}
.svg-connector.selected {
    stroke: red; 
    fill: red;
}
.svg-connector rect {
    /* size change is animated */
    transition: width 500ms ease-in-out, height 500ms ease-in-out;
    stroke: none;
}
.svg-connector.selected.anim rect {
    width: 25px;
}
.svg-connector g text {
    display: none;
    font-family:Verdana, Geneva, Tahoma, sans-serif;
    font-size: 8px;
    fill: white;
    stroke: none;
}
.svg-connector g text.anim {
    display: block;
}

/* Meta data */

.meta {
    color: #777;
}
.meta .meta-label {
    font-weight:bold;
}
.meta .meta-desc {
    margin-bottom: 10px;
}
.meta .meta-info {
    display: flex;
    flex-flow: column;
    justify-content: flex-start; 
}
.meta .meta-info .meta-field {
    display: flex;
    flex-flow: row nowrap;
    align-items: stretch; 
}
.meta .meta-info .meta-field .meta-key {
    width: 100px;
    border-bottom: 1px solid #ccc;
    padding-right: 10px;
}
.meta .meta-info .meta-field .meta-val {
    flex-grow: 1;
    border-bottom: 1px solid #ccc;
    text-align:left;
    max-width: 300px;
}

/* Load mask */

.loading-mask {
    position: absolute;
    height: 100%;
    width: 100%; 
    background-color: #000;
    bottom: 0;
    left: 0;
    right: 0;
    top: 0;
    opacity: 0.75;
    z-index: 999;
}

/* Spinner */

@keyframes spinner {
    0% {
        transform: translate3d(-50%, -50%, 0) rotate(0deg);
   }
    100% {
        transform: translate3d(-50%, -50%, 0) rotate(360deg);
   }
}
.loading-spinner {
    animation-play-state: running;
    opacity: 1;
    position: relative;
    height: 100vh;
    z-index: 1000;
    display: block;
}
.loading-spinner.-paused {
    animation-play-state: paused;
    opacity: 0;
    display: none;
    transition: opacity linear 0.1s;
}
.loading-spinner::before {
    animation: 1.5s linear infinite spinner;
    animation-play-state: inherit;
    border: solid 3px #dedede;
    border-bottom-color: #94d31b;
    border-radius: 50%;
    content: "";
    height: 200px;
    width: 200px;
    left: 50%;
    opacity: inherit;
    position: absolute;
    top: 50%;
    transform: translate3d(-50%, -50%, 0);
    will-change: transform;
}

/* Panel colours */

/* Green Panel */

.green-panel .panel-header {
    background-color: green;
    color: white;
}
.green-panel .panel-header .icon {
    filter: brightness(0) invert(1);
}
/*
.green-panel .field.selected {
    background-color: rgb(84, 212, 84);
    color: white;
}
.green-panel .field.matched {
    background-color: rgb(84, 212, 84);
}
.green-panel .field.selected .label-icon:before {
    filter: brightness(0) invert(1);
}
.green-panel .field.selected .required-icon:before {
    filter: brightness(0) invert(1);
}
*/
.svg-connector.green-panel rect {
    fill: green;
}
.svg-connector.green-panel polyline {
    stroke: green;
}
.svg-connector.green-panel polygon {
    fill: green;
    stroke: green;
}

/* Purple Panel */

.purple-panel .panel-header {
    background-color: purple;
    color: white;
}
.purple-panel .panel-header .icon {
    filter: brightness(0) invert(1);
}
/*
.purple-panel .field.selected {
    background-color: rgb(216, 51, 216);
    color: white;
}
.purple-panel .field.matched {
    background-color: rgb(224, 133, 224);
}
.purple-panel .field.selected .label-icon:before {
    filter: brightness(0) invert(1);
}
.purple-panel .field.selected .required-icon:before {
    filter: brightness(0) invert(1);
}
*/
.svg-connector.purple-panel rect {
    fill: purple;
}
.svg-connector.purple-panel polyline {
    stroke: purple;
}
.svg-connector.purple-panel polygon { 
    fill: purple;
    stroke: purple;
}

.red-panel .panel-header {
    background-color: rgb(223, 8, 8);
    color: white;
}
.red-panel .panel-header .icon {
    filter: brightness(0) invert(1);
}
/*
.red-panel .field.selected {
    background-color: rgb(253, 59, 59);
    color: white;
}
.red-panel .field.matched {
    background-color: rgb(84, 212, 84);
}
.red-panel .field.selected .label-icon:before {
    filter: brightness(0) invert(1);
}
.red-panel .field.selected .required-icon:before {
    filter: brightness(0) invert(1);
}
*/
.svg-connector.red-panel rect {
    fill: rgb(223, 8, 8);
}
.svg-connector.red-panel polyline {
    stroke: rgb(223, 8, 8);
}
.svg-connector.red-panel polygon {
    fill: rgb(223, 8, 8);
    stroke: rgb(223, 8, 8);
}

.blue-panel .panel-header {
    background-color: blue;
    color: white;
}
.blue-panel .panel-header .icon {
    filter: brightness(0) invert(1);
}
.svg-connector.blue-panel rect {
    fill: blue;
}
.svg-connector.blue-panel polyline {
    stroke: blue;
}
.svg-connector.blue-panel polygon {
    fill: blue;
    stroke: blue;
}

.gold-panel .panel-header {
    background-color: rgb(218, 188, 21);
    color: white;
}
.gold-panel .panel-header .icon {
    filter: brightness(0) invert(1);
}
.svg-connector.gold-panel rect {
    fill: rgb(218, 188, 21);
}
.svg-connector.gold-panel polyline {
    stroke: rgb(218, 188, 21);
}
.svg-connector.gold-panel polygon {
    fill: rgb(218, 188, 21);
    stroke: rgb(218, 188, 21);
}